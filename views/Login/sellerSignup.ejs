<%- include('../utils/Starter.ejs') %>
<!-- Link your css files here -->
<link rel="stylesheet" href="/styles/header.css">
<link rel="stylesheet" href="/styles/emailVerification.css">
<link rel="stylesheet" href="/styles/sellerSignup.css">
<%- include('../utils/AfterLinkStyles.ejs') %>
<%- include('../utils/Header.ejs') %>

<body>
    <%- include('../utils/MessageBox.ejs') %>
    <%- include('../utils/OTP_popup.ejs') %>
    <div class="body-wrapper">
        <div class="heading">
            <h1 class=".bona-nova-sc-bold pageHeading">Lets get started with us</h1><br>
            <p>Before you start, please be handly with</p>
            <p>image for Store, Header and Footer for pdf</p>
        </div>
        <div class="formWrapper">
            <form id="seller-form1" enctype="multipart/form-data">
                <div class="formView--1 formView ">
                    <fieldset>
                        <legend>Basic Details</legend>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Name',isTextArea:false,inputType:'text',nameAttribute:'sellerName',inputClassName:'sellerName',placeHolder:'Your Name',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        <%- include('../utils/EmailVerification.ejs',{verifiedStatusFor:'hidden-sellerSignup'}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Mobile No.',isTextArea:false,inputType:'number',nameAttribute:'mobileNo',inputClassName:'mobileNo',placeHolder:'Enter Mobile No.',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Password',isTextArea:false,inputType:'password',nameAttribute:'password',inputClassName:'password',placeHolder:'Enter password',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Confirm Password',isTextArea:false,inputType:'password',nameAttribute:'confirm-password',inputClassName:'confirm-password',placeHolder:'Re-enter password',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                    </fieldset>
                </div>
                <div class="formView--2 formView formPageHidden">
                    <fieldset>
                        <legend>Registration Details</legend>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Drug License Number',isTextArea:false,inputType:'text',nameAttribute:'drugLicenseNumber',inputClassName:'drugLicenseNumber',placeHolder:'XX YYY ZZZZZZ',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'GST Registration Number',isTextArea:false,inputType:'text',nameAttribute:'gstRegistrationNumber',inputClassName:'gstRegistrationNumber',placeHolder:'XX YYYYY UUUUA V Z B',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'FSSAI License Number',isTextArea:false,inputType:'text',nameAttribute:'fssaiLicenseNumber',inputClassName:'fssaiLicenseNumber',placeHolder:'',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        
                    </fieldset>
                </div>
                <div class="formView--3 formView formPageHidden">
                    <fieldset>
                        <legend>Store Details</legend>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Store Name',isTextArea:false,inputType:'text',nameAttribute:'storeName',inputClassName:'storeName',placeHolder:'Your Store Name',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Store Logo',isTextArea:false,inputType:'file',nameAttribute:'storeLogo',inputClassName:'storeLogo',placeHolder:'Store Logo',isRequired:false,isFile:true,fileType:'image/png, image/jpeg, image/jpg',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Header Logo for PDF',isTextArea:false,inputType:'file',nameAttribute:'headerLogoForPdf',inputClassName:'headerLogoForPdf',placeHolder:'Header Logo for PDF',isRequired:false,isFile:true,fileType:'image/png, image/jpeg, image/jpg',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Footer Logo for PDF',isTextArea:false,inputType:'file',nameAttribute:'footerLogoForPdf',inputClassName:'footerLogoForPdf',placeHolder:'Footer Logo for PDF',isRequired:false,isFile:true,fileType:'image/png, image/jpeg, image/jpg',isDisabled:false}) %>
                    </fieldset>
                </div>
                <div class="formView--4 formView formPageHidden">
                    <fieldset>
                        <legend>Store Availability</legend>
                        <div class="headerHolder availableContentHolder">
                            <div class="checkboxHolder">Select</div>
                            <div class="dayName">Day</div>
                            <div class="openTime">Opening Time</div>
                            <div class="closeTime">Closing Time</div>
                        </div>
                        <script>
                            const days = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];
                            const copyday = days;
                            copyday.reverse().forEach(day=>{
                                document.querySelector('.headerHolder').insertAdjacentHTML('afterend',
                                    `<div class="availableContentHolder">
                                        <div  class="checkboxHolder"><input class="checkboxes" type="checkbox" value="${day}" checked></div>
                                        <div class="dayName">${day}</div>
                                        <div class="openTime"><input type="time" name="${day}" id="openTime-${day}" value="09:00"></div>
                                        <div class="closeTime"><input type="time" name="${day}" id="closeTime-${day}" value="22:00"></div>
                                    </div>`
                                );
                            });
                        </script>
                        
                    </fieldset>
                </div>
                <div class="formView--5 formView formPageHidden">
                    <fieldset>
                        <legend>Store Location</legend>
                        <br>
                        <div style="color: white; padding:0.5rem;"><h3>Store Address</h3></div>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Line 1',isTextArea:false,inputType:'text',nameAttribute:'storeAddressLine1',inputClassName:'address-line1',placeHolder:'House Number/Apartment Number',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Line 2',isTextArea:false,inputType:'text',nameAttribute:'storeAddressLine2',inputClassName:'address-line2',placeHolder:'Locality/Area',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'Pincode',isTextArea:false,inputType:'number',nameAttribute:'pincode',inputClassName:'shopPincode',placeHolder:'Enter Pincode',isRequired:true,isFile:false,fileType:'',isDisabled:false}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'State',isTextArea:false,inputType:'text',nameAttribute:'',inputClassName:'shopState',placeHolder:'',isRequired:true,isFile:false,fileType:'',isDisabled:true}) %>
                        <%- include('../utils/inputField.ejs',{style:'sideWays',textClass:'',textName:'City',isTextArea:false,inputType:'text',nameAttribute:'',inputClassName:'shopCity',placeHolder:'',isRequired:true,isFile:false,fileType:'',isDisabled:true}) %>
        
                        <!-- location access handler -->
                        <div class="storeLocation"> 
                            <div class="storeLocationTextHolder">Store Location</div>
                            <div>
                                <button class="button getLocation">Locate Your Store</button>
                            </div>
                        </div>
                        <input type="hidden" value="" class="latitude">
                        <input type="hidden" value="" class="longitude">
                        <!-- google map script -->
                        <script>
                            window.addEventListener("message", function (event) {
                                console.log("Received message:", event.data.coords); // Debugging
                                if (event.data.coords) {
                                    document.querySelector(".latitude").value = event.data.coords.latitude;
                                    document.querySelector(".longitude").value = event.data.coords.longitude;
                                }
                                messageOperation( 'Fetched location successfully');
                            });
                        </script>
                        <div class="formBtn">
                            <div><button class="reset button" type="reset">Reset</button></div>
                            <div><button class="submit button" type="button">Submit</button></div>
                        </div>
                        <script>
                            const pincodeField =  document.querySelector('.shopPincode');
                            const state =document.querySelector('.shopState');
                            const city = document.querySelector('.shopCity');
                            pincodeField.addEventListener('input',async(e)=>{
                                console.log(pincodeField.value);
                                if(pincodeField.value.length==6){
                                    const response = await fetch('<%= url %>utils/pincode',{
                                        method:'POST',
                                        headers:  { 'Content-Type': 'application/json' },
                                        body: JSON.stringify({
                                            pincode : pincodeField.value
                                        }),
                                    });
                                    const result = await response.json();

                                    if(result.success){
                                        state.value = result.data.state;
                                        city.value = result.data.city;
                                    }else{
                                       messageOperation(result.message);
                                    }
                                }else{
                                    state.value = '';
                                    city.value = '';
                                }
                            })
                        </script>
                    </fieldset>
                </div>
                <div class="formViewBtn ">
                    <div class="sellerFormBackBtn sellerFormBtn navigationButtonHidden" title="previous page"> <img src="/images/redArrow.png" alt="Red Arrow"></div>
                    <div class="sellerFormFrontBtn sellerFormBtn" title="next page"><img src="/images/greenArrow.png" alt="Green Arrow"></div>
                </div>
            </form>
        </div>
    </div>
</body>
<script>
    console.log(message);
    const getLocation = document.querySelector('.getLocation');
    // inputFields
    const sellerName = document.querySelector('.sellerName');
    const sellerEmail = document.querySelector('.email-input');
    const sellerMobileNo = document.querySelector('.mobileNo');
    const sellerPassword = document.querySelector('.password');
    const confirmPassword = document.querySelector('.confirm-password');
    const drugLicenseNumber = document.querySelector('.drugLicenseNumber');
    const gstRegistrationNumber = document.querySelector('.gstRegistrationNumber');
    const fssaiLicenseNumber = document.querySelector('.fssaiLicenseNumber');
    const storeName = document.querySelector('.storeName');
    const storeLogo = document.querySelector('.storeLogo');
    const headerLogo = document.querySelector('.headerLogoForPdf');
    const footerLogo = document.querySelector('.footerLogoForPdf');
    const line1Address = document.querySelector('.address-line1');
    const line2Address = document.querySelector('.address-line2');
    const shopPincode = document.querySelector('.shopPincode');
    const shopState = document.querySelector('.shopState');
    const shopCity = document.querySelector('.shopCity');
    const locationLatitude = document.querySelector('.locationLatitude');
    const locationLongitude = document.querySelector('.locationLongitude');

    const nameRegex = /^[a-zA-Z ]{2,}$/;
    const mobileRegex = /^[1-9][0-9]{9}$/;
    const drugLicenseNumberRegex  = /^([0][1-9]|[1-2][0-9]|[3][0-5])([2][0-1](B|C)?)([0-9]{5,6})$/;
    const gstRegistrationNumberRegex = /^([0][1-9]|[1-3][0-9])[A-Z]{5}[0-9]{4}[A-Z][1-9A-Z][Z][A-Z0-9]$/;
    const fssaiLicenseNumberRegex = /^[1-2]([0][1-9]|[1-2][0-9]|3[0-5])[0-9]{2}[0-9]{2}[1-9][0-9]{5}[1-9]$/;
    const addressRegex = /^[a-zA-Z0-9-,/ ]+$/;
    // opening hours, closing hours
    const checkBoxes = document.querySelectorAll('.checkboxes');
    getLocation.addEventListener('click',()=>{
        googleMapPopUp();
    })
    let move = 1;
    const maxMove=5,minMove=1;
    const backButton = document.querySelector('.sellerFormBackBtn');
    const frontButton = document.querySelector('.sellerFormFrontBtn');
    const allPages = document.querySelectorAll('.formView');
    backButton.addEventListener('click',async(e)=>{
        if(move>minMove){
            move--;
            if(frontButton.classList.contains('navigationButtonHidden')){
                frontButton.classList.remove('navigationButtonHidden');
            }
            allPages.forEach(item=>item.classList.add('formPageHidden'));
            document.querySelector(`.formView--${move}`).classList.remove('formPageHidden');
        }
        if(move<=minMove){
            backButton.classList.add('navigationButtonHidden');
        }
    });

    frontButton.addEventListener('click',async(e)=>{
        if(move<maxMove){
            move++;
            if(backButton.classList.contains('navigationButtonHidden')){
                backButton.classList.remove('navigationButtonHidden');
            }   
            allPages.forEach(item=>item.classList.add('formPageHidden'));
            document.querySelector(`.formView--${move}`).classList.remove('formPageHidden');
        }
        if(move>=maxMove){
            frontButton.classList.add('navigationButtonHidden');
        }
    });

    function googleMapPopUp(){
        const isLocationAllowed = confirm('Enable location access to prioritize your shop for nearby customers.');
        if(isLocationAllowed){
            navigator.geolocation.getCurrentPosition(async position=>{
                const url = new URL('<%=url%>loadGoogleMap');
                url.searchParams.append('latitude',position.coords.latitude);
                url.searchParams.append('longitude',position.coords.longitude);
                window.open(url,'_blank');
            })
        }
    }
</script>
<script>
    function validation(field,rgx,errorMessage,isRemoveSpace){
        field.addEventListener('blur',()=>{
            console.log('entered');
            let trimmedInput = String(field.value).trim();
            if(isRemoveSpace){
                trimmedInput = trimmedInput.replace(/\s/g,''); 
            }
            const regex = rgx;
            if(!regex.test(trimmedInput)){
                field.value = '';
               messageOperation(errorMessage);
            }
        })
    }
    function messageOperation(errorMessage){
        message.textContent = errorMessage;
        message.classList.remove('message-hidden');
        setTimeout(()=>{
            message.classList.add('message-hidden');
        },3000);
    }
    //name and store name verification
    storeName.addEventListener('blur',()=>{
        const value = String(storeName.value).trim();
        if(!nameRegex.test(value)){
            messageOperation('Name should only contain Alphabets');
        }
        if(value.length<3 || value.length>50){
            messageOperation('Name should be between 3 to 50 characters');
        }
    });
    sellerName.addEventListener('blur',()=>{
        const value = String(sellerName.value).trim();
        if(!nameRegex.test(value)){
            messageOperation('Name should only contain Alphabets');
        }
        if(value.length<3 || value.length>50){
            messageOperation('Name should be between 3 to 50 characters');
        }
    })
    // mobile number verification
    validation(sellerMobileNo,mobileRegex,'Mobile number should be 10 digit long',false);
    // password verification
    sellerPassword.addEventListener('blur',()=>{
        const value = String(sellerPassword.value);
        if(value.length<=8){
            messageOperation('Password must be 8 characters long');
        }else if(value.indexOf(' ')!=-1){
            messageOperation('Password must not contain space character');
        }else if(! (/[A-Z]+/.test(value)) ){
            messageOperation('Password must contain atleast 1 Upper case letter');
        }else if( !(/[a-z]+/.test(value)) ){
            messageOperation('Password must contain atleast 1 lower case letter');
        }else if(!(/[0-9]+/.test(value))){
            messageOperation('Password must contain atleast 1 numeric character');
        }else if(!(/[^a-zA-Z0-9]+/.test(value))){
            messageOperation('Password must contain atleast 1 special character');
        }else if(value.length>25){
            messageOperation('Password must be less than 25 characters');
        }
    });
    //confirm-password verification
    confirmPassword.addEventListener('blur',()=>{
        if(confirmPassword.value!= sellerPassword.value){
            messageOperation('Password and Confirm Password should be same');
        }
    })
    //drug license number pattern verification
    validation(drugLicenseNumber,drugLicenseNumberRegex,'Please enter valid Drug License Numeber',true);
    //gst registeration number verification
    validation(gstRegistrationNumber,gstRegistrationNumberRegex,'Please enter a valid GST Registration Number',true);
    //fssai number verification
    validation(fssaiLicenseNumber,fssaiLicenseNumberRegex,'Please enter valid FSSAI License Number',true);
    //address validation
    line1Address.addEventListener('blur',(e)=>{
        const value = String(line1Address.value).trim();
        if(!addressRegex.test(value)){
            messageOperation('Only special character allowed is - , / or space');
        }
    });
    line2Address.addEventListener('blur',()=>{
        const value = String(line2Address.value).trim();
        if(!addressRegex.test(value)){
            messageOperation('Only special character allowed is - , / or space');
        }
    });
    //decide some validation for store timing

</script>
<script>
    //customer signup API
    const submitBtn = document.querySelector('.submit');
    submitBtn.addEventListener('click',async(e)=>{
        e.preventDefault();
        // throw an alert if required fields are empty
        if(sellerName.value=='' || sellerEmail.value=='' || sellerMobileNo.value=='' || sellerPassword.value=='' || drugLicenseNumber.value==''|| gstRegistrationNumber.value==''|| fssaiLicenseNumber.value==''|| storeName.value=='' || line1Address.value==''|| line2Address.value=='' || pincodeField.value=='' || shopState.value=='' || shopCity.value==''){
            alert('Please fill the mandatory fields');
            return;
        };
        const inputValidation = (data,rgx,message,removeSpace)=>{
            let trimmedData = String(data).trim();
            if(removeSpace){
                trimmedData = trimmedData.replace(/\s/g,'');    
            }
            if(!rgx.test(data)){
                return alert(message);
            }
        }
        // validate inputs sellerName and store Name
        inputValidation(sellerName,nameRegex,'Name shall only contain Upper and lower case letters and space');
        inputValidation(storeName,nameRegex,'Name shall only contain Upper and lower case letters and space');
        if(String(sellerName.value).length > 50 || String(sellerName.value).length<3 || String(storeName.value).length > 50 || String(sellerName.value).length<3){
            return alert('Name should be between 3 to 50 characters');
        }
        //email
        if(! /^[a-z0-9]+([\.\-\_][a-z0-9]+)*@[a-z0-9]+(\.[a-z]{2,}){1,3}$/.test(sellerEmail.value)){
            return alert('Invalid Email Pattern');
        }
        //mobile number
        if(! mobileRegex.test(sellerMobileNo.value)){
            return alert('Please enter valid mobile Number');
        }
        // password
        const password = String(password.value);
        if(password.length<=8){
            return alert('Password must be 8 characters long');
        }else if(password.indexOf(' ')!=-1){
            return alert('Password must not contain space character');
        }else if(! (/[A-Z]+/.test(password)) ){
            return alert('Password must contain atleast 1 Upper case letter');
        }else if( !(/[a-z]+/.test(password)) ){
            return alert('Password must contain atleast 1 lower case letter');
        }else if(!(/[0-9]+/.test(password))){
            return alert('Password must contain atleast 1 numeric character');
        }else if(!(/[^a-zA-Z0-9]+/.test(password))){
            return alert('Password must contain atleast 1 special character');
        }else if(value.length>25){
            return alert('Password must be less than 25 characters');
        }
        //confirm password
        if(password!= confirmPassword.value){
            return alert('Password and confirm password values must be same');
        }
        // drug license number
        if(!drugLicenseNumberRegex.test(String(drugLicenseNumber.value).replace(/\s/g,''))){
            return alert('Invalid Drug License Number');
        }
        if(!gstRegistrationNumberRegex.test(String(gstRegistrationNumber.value).replace(/\s/g,''))){
            return alert('Invalid GST Registration number format');
        }
        // fssai code
        if(!fssaiLicenseNumberRegex.test(String(fssaiLicenseNumber.value).replace(/\s/g,''))){
            return alert('Invalid FSSAI Number');
        }
        if(!addressRegex.test(String(line1Address.value).trim() || !addressRegex.test(String(line2Address.value).trim()))){
            return  alert('Address can only contain, - / special characters');
        }
        //pincode
        if(String(pincodeField.value).length!=6){
            return alert('Pincode must be Numeric and 6 character long');
        }
        if(shopState.value==''|| shopCity.value==''){
            return alert('Invalid pincode, please enter valid pincode');
        }
        // validate opening hours and closing hours here
        const formData = new FormData();
        formData.append('sellerName',sellerName.value);
        formData.append('sellerEmailId',sellerEmail.value);
        formData.append('sellerMobileNo',sellerMobileNo.value);
        formData.append('sellerPassword',sellerPassword.value);
        formData.append('drugLicenseNumber',drugLicenseNumber.value);
        formData.append('gstRegistrationNumber',gstRegistrationNumber.value);
        formData.append('fssaiLicenseNumber',fssaiLicenseNumber.value);
        formData.append('storeName',storeName.value);
        formData.append('storeLogo',storeLogo.files[0]),
        formData.append('line1Address',line1Address.value);
        formData.append('line2Address',line2Address.value);
        formData.append('shopPincode', shopPincode.value);
        formData.append('shopState',shopState.value);
        formData.append('shopCity',shopCity.value);
        formData.append('locationLatitude',locationLatitude.value);
        formData.append('locationLongitude',locationLongitude.value);
        const response = await fetch('<%= url %>signup/seller',{
            method: 'POST',
            body : formData,
        });
        const result = await response.json();
        if(result.success){
            const time = 5;
            message.classList.remove('message-hidden');
            const fxn = setInterval(()=>{
                if(time==0){
                    clearInterval(fxn);
                }
                message.textContent =  result.message + ` You will be redirect in ${time}sec`;
                time--;
            },1000);
            setTimeout(()=>{
                message.classList.add('message-hidden');
                window.location.href = '<%= url %>login';
            },5000)
        }
    })
</script>
<%- include('../utils/Footer.ejs') %>