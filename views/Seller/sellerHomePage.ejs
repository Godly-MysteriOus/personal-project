<%- include('../sellerUtils/starter.ejs') %>
<link rel="stylesheet" href="/styles/sellerCss/sellerHeader.css">
</head>
<%- include('../sellerUtils/sellerHeader.ejs') %>
<body>
    <%- include('../utils/MessageBox.ejs') %>
    <script>
        const message = document.querySelector('.message');
    </script>
    <link rel="stylesheet" href="/styles/sellerCss/sellerHomePage.css">
    <div class="searchOperation">
        <%- include('../utils/searchBox.ejs',{buttonsToRender:path,pageTitle:'Listed Medicines'}) %>
    </div>
    <div class="body-wrapper">
        <!-- all listed products -->
        <%- include('../sellerUtils/deleteButtonReload.ejs') %>
    </div>
    <script>
        const searchBtn = document.querySelector('.searchBtn');
        const keyName = '<%= localStorageKey.sellerListedProduct %>';
        const url = '<%= url %>';
    </script>

    <!-- load searchList -->
    <script defer>
        fetch(url+'utils/listedProduct',{
            method: 'GET',
            headers:{ 'Content-Type': 'application/json' },
        })
        .then(result=> result.json())
        .then(result=>{
            localStorage.setItem(keyName,JSON.stringify(result.data));
        })
        .catch(err=>{
            console.log(err.stack);
            message.textContent = 'Unable to fetch Listed Product Names';
            message.classList.remove('message-hidden');
            setTimeout(()=>{
                message.classList.add('message-hidden');
            },3000);
        });
    </script>
</body>

<script>
        
    // searchbar suggesstion and get all product button
    /*
        const searchInputField = document.querySelector('.searchInput');
        const suggesstions = document.querySelector('.suggestionBox');
        const medicineIdValue = document.querySelector('.medicineId');
    
        -------------- already declared in searchBox -------------------------
    */
    const getAllProductBtn = document.querySelector('.getAllProductBtn');
    const suggestionBox = document.querySelector('.suggestionBox');
    //  generate Suggesstion
    function loadSuggestionData(inputData){
        
        const listedProductList = JSON.parse(localStorage.getItem(keyName));
        let suggesstionList  = [];
        suggesstionList =  listedProductList.filter(item=>String(item.name).toLowerCase().includes(inputData.toLowerCase()));
        if(suggesstionList.length==0){
            suggesstionList.push({name:'No Item Present',productId:''});
        }
        const maxIteration = suggesstionList.length > 10 ? 10 : suggesstionList.length;
        suggestionBox.classList.remove('suggestionBox-hidden');
        suggestionBox.innerHTML = '';
        for(let i=0; i<maxIteration; i++){
            const option = document.createElement('option');
            option.textContent = suggesstionList[i].name;
            option.value = suggesstionList[i].productId;
            option.classList.add('optionField');
            suggestionBox.appendChild(option);
        }
    }
    searchInputField.addEventListener('input',async(e)=>{
        const inputData = String(searchInputField.value);
        loadSuggestionData(inputData);
    });
    // shows all product
    getAllProductBtn.addEventListener('click',async(e)=>{
        window.location.href = url+'seller/listed-products';
    });
    
</script>
<%- include('../sellerUtils/footer.ejs') %>